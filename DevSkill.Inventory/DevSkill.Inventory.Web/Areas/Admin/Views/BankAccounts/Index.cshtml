@using DevSkill.Inventory.Domain
@using DevSkill.Inventory.Domain.Dtos
@using DevSkill.Inventory.Domain.Enums
@model IEnumerable<BankAccountIndexDto>
@{
    ViewData["Title"] = "Index";
    var idx = 1;
}

<!--begin::App Content Header-->
<div class="app-content-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6"><h3 class="mb-0">Available Bank Accounts</h3></div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-end">
                    <li class="breadcrumb-item"><a asp-controller="Settings" asp-action="Index" asp-area="Admin">Settings</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Bank Accounts</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<!--end::App Content Header-->
<!--begin::App Content-->
<div id="BankAccountModalContainer"></div>
<div class="app-content">
    <div class="container-fluid">
        <partial name="_ResponsePartial" />
        <!-- Space between cards -->
        <div class="row mt-4">
            <div class="col-md-12">
                <div class="card mb-4">
                    <div class="card-header d-flex">
                        <h3 class="card-title">Bank Accounts</h3>
                        @if(User.HasClaim(PermissionTypes.BankAccount,Permissions.BankAccountAdd))
                        {
                            <button type="button" class="btn btn-primary ms-auto" onclick="Add()">
                                <i class="bi bi-plus-lg"></i>
                                New Bank Account
                            </button>
                        }
                    </div>
                    <div class="card-body">
                        <partial name="_ModalPartial" />
                        <table id="BankAccounts" class="table table-bordered">
                            <thead>
                                <tr class="text-center">
                                    <th>#SN</th>					
                                    <th>Account Name</th>
                                    <th>Account No</th>
                                    <th>Bank Name</th>
                                    <th>Branch Name</th>
                                    <th>Opening Balance</th>
                                    <th>Current Balance</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach(var bankAccount  in Model.ToList())
                                {
                                    <tr class="text-center">
                                        <td>@(idx++)</td>
                                        <td>@bankAccount.AccountName</td>
                                        <td>@bankAccount.AccountNumber</td>
                                        <td>@bankAccount.BankName</td>
                                        <td>@bankAccount.BranchName</td>
                                        <td>@bankAccount.OpeningBalance</td>
                                        <td>@bankAccount.CurrentBalance</td>
                                        <td>@bankAccount.Status.ToString()</td>
                                        <td>
                                            @if (User.HasClaim(PermissionTypes.BankAccount, Permissions.BankAccountUpdate)
                                                                                    || User.HasClaim(PermissionTypes.BankAccount, Permissions.BankAccountDelete))
                                            {
                                                <div class="dropdown">
                                                <button class="btn btn-success btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                    Actions
                                                </button>
                                                <ul class="dropdown-menu">
                                                    @if (User.HasClaim(PermissionTypes.BankAccount, Permissions.BankAccountUpdate))
                                                    {
                                                        <li>
                                                            <button class="dropdown-item text-info" onclick="Update(@bankAccount.Id)">
                                                                <i class="bi bi-pencil-square"></i> Edit
                                                            </button>
                                                        </li>
                                                    }
                                                    @if (User.HasClaim(PermissionTypes.BankAccount, Permissions.BankAccountDelete))
                                                    {
                                                        <li>
                                                            <button class="dropdown-item text-danger show-bs-modal" data-id="@bankAccount.Id">
                                                                <i class="bi bi-trash"></i> Delete
                                                            </button>
                                                        </li>
                                                    }
                                                </ul>
                                                </div>
                                            }
                                            else
                                            {
                                                <p class="text-danger">Unavailable</p>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot class="text-center">
                                <tr>
                                    <th>#SN</th>
                                    <th>Account Name</th>
                                    <th>Account No</th>
                                    <th>Bank Name</th>
                                    <th>Branch Name</th>
                                    <th>Opening Balance</th>
                                    <th>Current Balance</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <!--end::Row-->
    </div>
</div>
<!--end::App Content-->
@section Scripts {
    <script>
        function Add() {
            $.get("/Admin/BankAccounts/Add", function (response) {
                $("#BankAccountModalContainer").html(response);
                $("#BankAccountModal").modal("show");
            });
        }
        function Update(Id)
        {
            $.get("/Admin/BankAccounts/Update/"+Id, function (response) {
                if (response.success === false) {
                    window.location.href = response.redirectUrl;
                }
                $("#BankAccountModalContainer").html(response);
                $("#BankAccountModal").modal("show");
            });
        }
    </script>
    <script>
        $('#BankAccounts').on('click', '.show-bs-modal', function() {
            let id = $(this).data('id');
            let DeleteModal = $('#delete-modal');
            DeleteModal.find('.modal-body p').html('Are you sure you want to delete this Bank Account?');
            $('#delete-id').val(id);
            $('#delete-form').attr('action', '/Admin/BankAccounts/Delete');
            DeleteModal.modal('show');
        });

        $('#delete-btn').on('click', function() {
            $('#delete-form').submit();
        });
    </script>
}


