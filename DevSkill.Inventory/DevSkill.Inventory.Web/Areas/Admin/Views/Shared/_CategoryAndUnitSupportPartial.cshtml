<style>
    .select2-container--bootstrap-5 .select2-dropdown .select2-results__options
    .select2-results__option.select2-results__option--selected,
    .select2-container--bootstrap-5 .select2-dropdown
    .select2-results__options .select2-results__option[aria-selected=true]:not(.select2-results__option--highlighted) {
        background-color: gray !important
    }

    .select2-container--bootstrap-5 .select2-dropdown .select2-results__options
    .select2-results__option.select2-results__option--highlighted {
        color: #fff !important;
        background-color: #0d6efd !important;
    }
</style>
<script>
        function initializeTaggableSelect2({ selectorId, searchUrl, createUrl, dropdownParentId = 'body' }) {
        const $select = $(selectorId);

        $select.select2({
            theme: "bootstrap-5",
            width: $select.data('width') ? $select.data('width') : $select.hasClass('w-100') ? '100%' : 'style',
            placeholder: $select.data('placeholder'),
            dropdownParent: $(dropdownParentId),
            tags: true,
            ajax: {
                url: searchUrl,
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        term: params.term || '',
                        page: params.page || 1,
                        pageSize: 5
                    };
                },
                processResults: function (data, params) {
                    params.page = params.page || 1;
                    return {
                        results: data.results,
                        pagination: {
                            more: data.pagination && data.pagination.more
                        }
                    };
                },
                cache: true
            },
            templateResult: function (option) {
                if (option.loading || !option.id) return option.text;
                const $result = $('<span></span>');
                if (option.newTag) {
                    $result.html(`<span >Create: "${option.text}"</span>`);
                } else {
                    $result.text(option.text);
                }
                return $result;
            },
            templateSelection: function (option) {
                return option.text;
            },
            createTag: function (params) {
                const term = $.trim(params.term);
                if (term === '') return null;
                return {
                    id: term,
                    text: term,
                    newTag: true
                };
            }
        });

        $select.on('select2:close', function (e) {
            const data = $select.select2('data')[0];
            if (data.newTag) {
                const token = $('input[name="__RequestVerificationToken"]').val();
                $.ajax({
                    url: createUrl,
                    type: 'POST',
                    contentType: 'application/json',
                    headers: {
                        'RequestVerificationToken': token
                    },
                    data: JSON.stringify({ Name: data.text }),
                    success: function (response) {
                        $select.find(`option[value="${data.id}"]`).remove();
                        const newOption = new Option(response.name, response.id, true, true);
                        $select.append(newOption).trigger({
                            type: 'select2:select',
                            params: {
                                data: { id: response.id, text: response.name }
                            }
                        });
                    },
                    error: function () {
                        alert(`Failed to create item.`);
                        $select.find(`option[value="${data.id}"]`).remove();
                        $select.val(null).trigger('change');
                    }
                });
            }
        });
    }
    $(document).ready(function () {
        initializeTaggableSelect2({
            selectorId: '#CategoryId',
            searchUrl: '/Admin/Categories/SearchCategories',
            createUrl: '/Admin/Categories/CreateCategorySelect2',
            dropdownParentId: '#ProductModal'
        });

        initializeTaggableSelect2({
            selectorId: '#UnitId',
            searchUrl: '/Admin/Units/SearchUnits',
            createUrl: '/Admin/Units/CreateUnitSelect2',
            dropdownParentId: '#ProductModal'
        });
    });
</script>